#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ"
echo "============================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º BOT_TOKEN
if [ -z "$BOT_TOKEN" ]; then
    echo "‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω: export BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω"
    exit 1
fi

echo "[SUCCESS] BOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
echo "[INFO] –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << EOF
BOT_TOKEN=${BOT_TOKEN}
LOG_LEVEL=INFO
OLLAMA_HOST=0.0.0.0:11434
EOF
echo "[SUCCESS] .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "[INFO] –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p temp logs models
echo "[SUCCESS] –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –∏ Docker Compose
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
fi

echo "[SUCCESS] Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
echo "[INFO] –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.production.yml down --remove-orphans || true

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
echo "[INFO] –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f || true

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –í–ú
echo "[INFO] –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."

# –°–æ–±–∏—Ä–∞–µ–º LLM —Å–µ—Ä–≤–∏—Å
echo "Building llm-service"
docker build -t agenteer-review_llm-service:latest -f Dockerfile.llm .

# –°–æ–±–∏—Ä–∞–µ–º Telegram –±–æ—Ç
echo "Building telegram-bot"  
docker build -t agenteer-review_telegram-bot:latest -f Dockerfile.bot .

echo "[SUCCESS] –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"

# –°–æ–∑–¥–∞–µ–º docker-compose —Ñ–∞–π–ª –¥–ª—è –í–ú
echo "[INFO] –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –í–ú..."
cat > docker-compose.vm.yml << 'EOF'
version: '3.8'

services:
  llm-service:
    image: agenteer-review_llm-service:latest
    container_name: llm-service
    ports:
      - "8000:8000"
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    volumes:
      - ollama_data:/root/.ollama
      - ./temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  telegram-bot:
    image: agenteer-review_telegram-bot:latest
    container_name: telegram-bot
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - LLM_SERVICE_URL=http://llm-service:8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./temp:/app/temp
    depends_on:
      llm-service:
        condition: service_healthy
    restart: unless-stopped

volumes:
  ollama_data:
    driver: local
EOF

echo "[SUCCESS] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –ó–∞–ø—É—Å–∫–∞–µ–º LLM —Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
echo "[INFO] –ó–∞–ø—É—Å–∫ LLM —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏..."
docker-compose -f docker-compose.vm.yml up -d llm-service

echo "[INFO] –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ LLM —Å–µ—Ä–≤–∏—Å–∞..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
echo "[INFO] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è LLM —Å–µ—Ä–≤–∏—Å–∞..."
for i in {1..10}; do
    if curl -f http://localhost:8000/health &>/dev/null; then
        echo "[SUCCESS] LLM —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤"
        break
    fi
    echo "–ü–æ–ø—ã—Ç–∫–∞ $i/10: –∂–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞..."
    sleep 10
done

# –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞
echo "[INFO] –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."
docker-compose -f docker-compose.vm.yml up -d telegram-bot

echo "[SUCCESS] –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose -f docker-compose.vm.yml ps
echo ""
echo "üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
echo "docker-compose -f docker-compose.vm.yml logs -f llm-service"
echo "docker-compose -f docker-compose.vm.yml logs -f telegram-bot"
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "docker-compose -f docker-compose.vm.yml down"
echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:"
echo "docker-compose -f docker-compose.vm.yml restart"