#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±–æ—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π"
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º BOT_TOKEN
if [ -z "$BOT_TOKEN" ]; then
    echo "‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω: export BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω"
    exit 1
fi

echo "‚úÖ BOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << EOF
BOT_TOKEN=${BOT_TOKEN}
LOG_LEVEL=INFO
TEMP_DIR=/app/temp
MODEL_CACHE_DIR=/app/models
DOCKER_ENV=1
EOF
echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p temp logs models
sudo chown -R $USER:docker temp logs models 2>/dev/null || true
echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –∏ Docker Compose
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
fi

echo "‚úÖ Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --remove-orphans 2>/dev/null || true
docker-compose -f docker-compose.production.yml down --remove-orphans 2>/dev/null || true

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f || true

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã..."
required_files=("app.py" "api/llm_server.py" "bot/handlers.py" "docker-compose.yml" "Dockerfile")
for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: $file"
        echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É!"
        exit 1
    fi
done
echo "‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ bot/handlers.py –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
echo "üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤..."
forbidden_imports=("from core.orchestrator import" "from core.agents." "from core.pdf_extractor import")
for import in "${forbidden_imports[@]}"; do
    if grep -q "$import" bot/handlers.py; then
        echo "‚ùå –ù–∞–π–¥–µ–Ω –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –≤ bot/handlers.py: $import"
        echo "–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ HTTP –∫–ª–∏–µ–Ω—Ç!"
        exit 1
    fi
done
echo "‚úÖ –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose build --no-cache

echo "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"

# –ó–∞–ø—É—Å–∫–∞–µ–º ollama –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
echo "ü§ñ –ó–∞–ø—É—Å–∫ Ollama –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏..."
docker-compose up -d ollama

# –ñ–¥–µ–º –ø–æ–∫–∞ ollama –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Ollama..."
timeout=60
while [ $timeout -gt 0 ]; do
    if curl -s http://localhost:11434/api/version >/dev/null 2>&1; then
        echo "‚úÖ Ollama –∑–∞–ø—É—â–µ–Ω"
        break
    fi
    echo "–û–∂–∏–¥–∞–Ω–∏–µ Ollama... ($timeout —Å–µ–∫)"
    sleep 3
    timeout=$((timeout-3))
done

if [ $timeout -eq 0 ]; then
    echo "‚ùå Ollama –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥"
    docker-compose logs ollama
    exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ llama3.2:3b..."
if docker exec ollama-server ollama list | grep -q "llama3.2:3b"; then
    echo "‚úÖ –ú–æ–¥–µ–ª—å llama3.2:3b —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
else
    echo "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç"
    docker exec ollama-server ollama pull llama3.2:3b
    echo "‚úÖ –ú–æ–¥–µ–ª—å llama3.2:3b –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
docker-compose up -d app

# –ñ–¥–µ–º –ø–æ–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
timeout=30
while [ $timeout -gt 0 ]; do
    if curl -s http://localhost:8000/health >/dev/null 2>&1; then
        echo "‚úÖ FastAPI —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        break
    fi
    echo "–û–∂–∏–¥–∞–Ω–∏–µ FastAPI... ($timeout —Å–µ–∫)"
    sleep 2
    timeout=$((timeout-2))
done

if [ $timeout -eq 0 ]; then
    echo "‚ùå FastAPI –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥"
    docker-compose logs app
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
health=$(curl -s http://localhost:8000/health | jq -r '.status' 2>/dev/null || echo "error")
if [ "$health" = "healthy" ]; then
    echo "‚úÖ Health check –ø—Ä–æ–π–¥–µ–Ω"
else
    echo "‚ùå Health check –Ω–µ –ø—Ä–æ–π–¥–µ–Ω"
    docker-compose logs app
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ models endpoint  
models=$(curl -s http://localhost:8000/models | jq -r '.success' 2>/dev/null || echo "false")
if [ "$models" = "true" ]; then
    echo "‚úÖ Models endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Models endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    docker-compose logs app
    exit 1
fi

echo ""
echo "üéâ –î–ï–ü–õ–û–ô–ú–ï–ù–¢ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!"
echo "=================================="
echo "‚úÖ –ï–¥–∏–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä app —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000"
echo "‚úÖ Ollama —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 11434"
echo "‚úÖ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω"
echo "‚úÖ FastAPI —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
echo "‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps
echo ""
echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: docker-compose logs app"
echo "  –õ–æ–≥–∏ ollama: docker-compose logs ollama"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart app"
echo ""
echo "üåê –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã:"
echo "  Health: http://localhost:8000/health"
echo "  Models: http://localhost:8000/models"
echo "  Review: http://localhost:8000/review"
echo ""
echo "ü§ñ Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!" 