#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–π
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'src'))

from utils.formatters import format_review

def test_review_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–π"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–π")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ä–µ—Ü–µ–Ω–∑–∏–µ–π
    results_with_review = {
        "processing_status": "success",
        "final_review": "This is a test review with detailed analysis and recommendations.",
        "agent_results": {
            "StructureAgent": {
                "status": "success",
                "result": "Structure analysis completed successfully"
            }
        }
    }
    
    metadata = {
        "title": "Test Paper",
        "author": "Test Author",
        "page_count": 10
    }
    
    # –¢–µ—Å—Ç —Å verbose=False (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    formatted_basic = format_review(results_with_review, metadata, verbose=False)
    
    if "This is a test review" in formatted_basic and "üìù *–†–µ—Ü–µ–Ω–∑–∏—è:*" in formatted_basic:
        print("‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω: –§–∏–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ü–µ–Ω–∑–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –±–∞–∑–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
    else:
        print("‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –§–∏–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ü–µ–Ω–∑–∏—è –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {formatted_basic}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–µ–∑ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –Ω–µ –ø–∞–¥–∞–µ—Ç
    results_no_review = {
        "processing_status": "success",
        "final_review": "",
        "agent_results": {}
    }
    
    formatted_no_review = format_review(results_no_review, metadata, verbose=False)
    
    if "üìÑ *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ—Ü–µ–Ω–∑–∏—è" in formatted_no_review:
        print("‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Ä–µ—Ü–µ–Ω–∑–∏–∏")
    else:
        print("‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º verbose —Ä–µ–∂–∏–º
    formatted_verbose = format_review(results_with_review, metadata, verbose=True)
    
    if "üîç *–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–≥–µ–Ω—Ç–æ–≤:*" in formatted_verbose and "This is a test review" in formatted_verbose:
        print("‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω: Verbose —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
    
    # –¢–µ—Å—Ç 4: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    results_error = {
        "processing_status": "error",
        "error": "Test error message"
    }
    
    formatted_error = format_review(results_error, metadata)
    
    if "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞" in formatted_error and "Test error message" in formatted_error:
        print("‚úÖ –¢–µ—Å—Ç 4 –ø—Ä–æ–π–¥–µ–Ω: –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –¢–µ—Å—Ç 4 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_review_formatting() 