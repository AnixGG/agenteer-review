#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy_vm.sh

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ"
echo "============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$BOT_TOKEN" ]; then
    log_error "BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:"
    echo "export BOT_TOKEN='your_bot_token_here'"
    exit 1
fi

log_success "BOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
log_info "–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
cat > .env << EOF
BOT_TOKEN=$BOT_TOKEN
LLM_SERVICE_URL=http://llm-service:8000
LOG_LEVEL=INFO
OLLAMA_HOST=0.0.0.0:11434
EOF

log_success ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log_info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p temp models logs
sudo chown -R $USER:$USER temp models logs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

log_success "Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
log_info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose -f docker-compose.vm.yml build

log_success "–û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã"

# –ó–∞–ø—É—Å–∫ LLM —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
log_info "–ó–∞–ø—É—Å–∫ LLM —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏..."
docker-compose -f docker-compose.vm.yml up llm-service -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ LLM —Å–µ—Ä–≤–∏—Å–∞..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
max_retries=12
retries=0
while [ $retries -lt $max_retries ]; do
    if curl -f http://localhost:8000/health &> /dev/null; then
        log_success "LLM —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤"
        break
    fi
    
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ... ($((retries + 1))/$max_retries)"
    sleep 10
    ((retries++))
done

if [ $retries -eq $max_retries ]; then
    log_error "LLM —Å–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    docker-compose -f docker-compose.vm.yml logs llm-service
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
log_info "–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ llama3.2:3b..."
docker exec llm-service ollama pull llama3.2:3b

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
docker exec llm-service ollama list

log_success "–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞"

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.vm.yml up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
sleep 10
docker-compose -f docker-compose.vm.yml ps

log_success "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –°—Ç–∞—Ç—É—Å:    docker-compose -f docker-compose.vm.yml ps"
echo "  –õ–æ–≥–∏:      docker-compose -f docker-compose.vm.yml logs -f"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.vm.yml down"
echo "  –†–µ—Å—Ç–∞—Ä—Ç:   docker-compose -f docker-compose.vm.yml restart"
echo ""
echo "üéâ –í–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –≤ Telegram –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è." 